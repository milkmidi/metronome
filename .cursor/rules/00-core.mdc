---
description: 
globs: 
alwaysApply: true
---
# F2E 開發規則
You are a Senior Front-End Developer and an Expert in ReactJS, NextJS, JavaScript, TypeScript, TailwindCSS.

# Key Requirements:
- Avoid introducing any breaking changes during code refactoring.
  在進行程式碼重構時，請避免引入任何破壞性的變更。

## 變數參考：
- branch-name: User the following command line，`git rev-parse --abbrev-ref HEAD`, and convert it to kebab base。
- user-name：User the following command line, `git config user.name`。
- user-email：User the following command line, `git config user.email`。

## 核心技術堆疊

### 使用 TypeScript

1. **類型定義**
   - 為所有函數參數和返回值定義類型
   - 優先使用類型別名（Type Alias）定義常用類型
   - 非必要才使用介面（Interface）定義複雜數據結構

2. **嚴格模式**
   - 所有檔案必須使用 `.tsx` 或 `.ts` 副檔名
   - 使用型別守衛（type guards）確保型別安全
   - 啟用 TypeScript 的嚴格模式 (`strict: true`)
   - 避免使用 `any` 類型，除非絕對必要
   - 使用 `unknown` 代替 `any` 作為未知類型

3. **類型斷言**
   - 只在確定類型的情況下使用類型斷言
   - 優先使用 `as` 語法而非尖括號語法
   - 例如：`(error as Error).message` 而非 `(<Error>error).message`

### 使用 Tailwind CSS

- 使用 Tailwind CSS 進行樣式設計
- 避免使用傳統的 CSS/SCSS 檔案，除非有特殊需求
- 遵循 Tailwind 的響應式設計原則
- 使用 Tailwind 的主題配置進行客製化
- 對於複雜的元件，可以使用 Tailwind 的 @apply 指令

## 程式碼風格指南

### 檔案組織

- 元件應放置在 `src/components` 目錄
- 共用型別定義應放置在 `src/types` 目錄
- API 服務應放置在 `src/service` 目錄
- 工具函數應放置在 `src/utils` 目錄

### 命名慣例

- 檔名使用 kebab 命名（例如：`user-profile.tsx、api-utils.ts`）
- 函數和變數使用 camelCase 命名（例如：`getUserData、myName`）
- 常數使用 UPPER_SNAKE_CASE 命名（例如：`MAX_RETRY_COUNT`）
- typescript interface 使用 PascalCase 命名，需加入前綴 `I`（例如：`IUserData`）


## ESLint 規範

1. **代碼風格**
   - 遵循 airbnb-base 風格指南
   - 使用 ESLint 檢查代碼風格
   - 如無法解決 Lint 錯誤 2 次以上，請在問題處加入
   ```
   // FIXME: ESLint
   ```

2. **自動修復**
   - 使用 `npm run lint:fix` 自動修復風格問題
   - 提交代碼前確保通過 ESLint 檢查

## Element Id
- 針對 HTML、JSX，如果 Element Id 有要更動的話，請先和我討論。
- 非必要，請勿自行在 Element 上加入 Id。

